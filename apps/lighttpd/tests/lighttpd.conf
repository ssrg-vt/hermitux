debug.log-request-handling = "enable"
debug.log-request-header = "enable"
debug.log-response-header = "enable"
#debug.log-condition-handling = "enable"
server.document-root         = env.SRCDIR + "/tmp/lighttpd/servers/www.example.org/pages/"

## 64 Mbyte ... nice limit
server.max-request-size = 65000

## bind to port (default: 80)
server.port                 = 2048

## bind to localhost (default: all interfaces)
server.bind                = "localhost"
server.errorlog            = env.SRCDIR + "/tmp/lighttpd/logs/lighttpd.error.log"
server.breakagelog         = env.SRCDIR + "/tmp/lighttpd/logs/lighttpd.breakage.log"
server.name                = "www.example.org"
server.tag                 = "Apache 1.3.29"

server.dir-listing          = "enable"

server.modules = (
	"mod_setenv",
	"mod_access",
	"mod_expire",
	"mod_simple_vhost",
	"mod_cgi",
	"mod_userdir",
	"mod_ssi",
	"mod_accesslog",
)

server.indexfiles = (
	"index.html",
)

ssi.extension = (
	".shtml",
)

accesslog.filename = env.SRCDIR + "/tmp/lighttpd/logs/lighttpd.access.log"

mimetype.assign = (
	".png"  => "image/png",
	".jpg"  => "image/jpeg",
	".jpeg" => "image/jpeg",
	".gif"  => "image/gif",
	".html" => "text/html",
	".htm"  => "text/html",
	".pdf"  => "application/pdf",
	".swf"  => "application/x-shockwave-flash",
	".spl"  => "application/futuresplash",
	".txt"  => "text/plain",
	".tar.gz" =>   "application/x-tgz",
	".tgz"  => "application/x-tgz",
	".gz"   => "application/x-gzip",
	".c"    => "text/plain",
	".conf" => "text/plain",
)

setenv.add-environment = (
	"TRAC_ENV" => "tracenv",
	"SETENV" => "setenv",
)
setenv.set-environment = (
	"NEWENV" => "newenv",
)
setenv.add-request-header = (
	"FOO" => "foo",
)
setenv.set-request-header = (
	"FOO2" => "foo2",
)
setenv.add-response-header = (
	"BAR" => "foo",
)
setenv.set-response-header = (
	"BAR2" => "bar2",
)

$HTTP["url"] =~ "\.pdf$" {
	server.range-requests = "disable"
}

cgi.local-redir = "enable"
cgi.assign = (
	".pl"  => env.PERL,
	".cgi" => env.PERL,
)

userdir.include-user = (
	"jan",
)
userdir.path = "/"

url.access-deny = (
	"~",
	".inc",
)

expire.url = (
	"/expire/access" => "access 2 hours",
	"/expire/modification" => "access plus 1 seconds 2 minutes",
)

$HTTP["host"] == "zzz.example.org" {
	server.document-root = env.SRCDIR + "/tmp/lighttpd/servers/www.example.org/pages/"
	server.name = "zzz.example.org"
	static-file.disable-pathinfo = "enable"
}

$HTTP["host"] == "symlink.example.org" {
	server.document-root = env.SRCDIR + "/tmp/lighttpd/servers/www.example.org/pages/"
	server.name = "symlink.example.org"
	server.follow-symlink = "enable"
}

$HTTP["host"] == "nosymlink.example.org" {
	server.document-root = env.SRCDIR + "/tmp/lighttpd/servers/www.example.org/pages/"
	server.name = "symlink.example.org"
	server.follow-symlink = "disable"
}

$HTTP["host"] == "no-simple.example.org" {
	server.document-root = env.SRCDIR + "/tmp/lighttpd/servers/123.example.org/pages/"
	server.name = "zzz.example.org"
}

$HTTP["host"] !~ "(no-simple\.example\.org)" {
	simple-vhost.document-root  = "pages"
	simple-vhost.server-root    = env.SRCDIR + "/tmp/lighttpd/servers/"
	simple-vhost.default-host   = "www.example.org"
}

$HTTP["host"] =~ "bug255\.example\.org$" {
	$HTTP["remoteip"] == "127.0.0.1" {
		url.access-deny = (
			"",
		)
	}
}

$HTTP["referer"] !~ "^($|http://referer\.example\.org)" {
	url.access-deny = (
		".jpg",
	)
}

# deny access for all image stealers
$HTTP["host"] == "referer.example.org" {
	$HTTP["referer"] !~ "^($|http://referer\.example\.org)" {
		url.access-deny = (
			".png",
		)
	}
}

$HTTP["cookie"] =~ "empty-ref" {
	$HTTP["referer"] == "" {
		url.access-deny = (
			"",
		)
	}
}

$HTTP["host"] =~ "allow\.example\.org$" {
	url.access-allow = ( ".txt" ) # allow takes precedence over deny
	url.access-deny = ( ".txt" )
}

$HTTP["host"] == "etag.example.org" {
	static-file.etags = "disable"
	compress.filetype = ()
}
